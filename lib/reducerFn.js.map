{"version":3,"sources":["../src/reducerFn.js"],"names":["reducerFn","initialState","actions","reducer","actionFetch","actionSuccess","actionFail","actionReset","actionCache","actionAbort","state","action","request","type","loading","error","syncing","sync","data","mutation","id","cacheExpire","cache","expire"],"mappings":"AAAA;;AAEA;;;;;;;;kBAUwBA,S;;AATxB;;;;AAEA;;;;;;;AAOe,SAASA,SAAT,CAAmBC,YAAnB,EAAsD;AAAA,MAArBC,OAAqB,uEAAb,EAAa;AAAA,MAATC,OAAS;AAAA,MAC3DC,WAD2D,GAEvBF,OAFuB,CAC3DE,WAD2D;AAAA,MAC9CC,aAD8C,GAEvBH,OAFuB,CAC9CG,aAD8C;AAAA,MAC/BC,UAD+B,GAEvBJ,OAFuB,CAC/BI,UAD+B;AAAA,MAEjEC,WAFiE,GAEvBL,OAFuB,CAEjEK,WAFiE;AAAA,MAEpDC,WAFoD,GAEvBN,OAFuB,CAEpDM,WAFoD;AAAA,MAEvCC,WAFuC,GAEvBP,OAFuB,CAEvCO,WAFuC;;AAGnE,SAAO,YAA+B;AAAA,QAA9BC,KAA8B,uEAAxBT,YAAwB;AAAA,QAAVU,MAAU;;AACpC,QAAMC,UAAUD,OAAOC,OAAP,IAAkB,EAAlC;AACA,YAAQD,OAAOE,IAAf;AACE,WAAKT,WAAL;AACE,4BACKM,KADL;AAEEE,0BAFF;AAGEE,mBAAS,IAHX;AAIEC,iBAAO,IAJT;AAKEC,mBAAS,CAAC,CAACL,OAAOK;AALpB;AAOF,WAAKX,aAAL;AACE,4BACKK,KADL;AAEEI,mBAAS,KAFX;AAGEG,gBAAM,IAHR;AAIED,mBAAS,KAJX;AAKED,iBAAO,IALT;AAMEG,gBAAMP,OAAOO;AANf;AAQF,WAAKZ,UAAL;AACE,4BACKI,KADL;AAEEI,mBAAS,KAFX;AAGEC,iBAAOJ,OAAOI,KAHhB;AAIEC,mBAAS;AAJX;AAMF,WAAKT,WAAL;AAAA,YACUY,QADV,GACuBR,MADvB,CACUQ,QADV;;AAEE,eAAQA,aAAa,MAAd,gBACFT,KADE;AAELE,mBAAS,IAFJ;AAGLK,gBAAM,KAHD,mBAIFhB,YAJE,CAAP;AAKF,WAAKQ,WAAL;AACE,4BACKC,KADL;AAEEE,mBAAS,IAFX;AAGEE,mBAAS,KAHX;AAIEE,mBAAS,KAJX;AAKED,iBAAOJ,OAAOI;AALhB;AAOF,WAAKP,WAAL;AAAA,YACUY,EADV,GACuBT,MADvB,CACUS,EADV;AAAA,YACcF,IADd,GACuBP,MADvB,CACcO,IADd;;AAEE,YAAMG,cAAcX,MAAMY,KAAN,CAAYF,EAAZ,IAAkBV,MAAMY,KAAN,CAAYF,EAAZ,EAAgBG,MAAlC,GAA2C,IAA/D;AACA,YAAMA,SAAS,sBAAUZ,OAAOY,MAAjB,EAAyBF,WAAzB,CAAf;AACA,4BACKX,KADL;AAEEY,8BAAYZ,MAAMY,KAAlB,sBAA0BF,EAA1B,EAA+B,EAAEG,cAAF,EAAUL,UAAV,EAA/B;AAFF;AAIF;AACE,eAAOf,UAAUA,QAAQO,KAAR,EAAeC,MAAf,CAAV,GAAmCD,KAA1C;AAjDJ;AAmDD,GArDD;AAsDD","file":"reducerFn.js","sourcesContent":["\"use strict\";\n\n/* eslint no-case-declarations: 0 */\nimport { setExpire } from \"./utils/cache\";\n\n/**\n * Reducer contructor\n * @param  {Object}   initialState default initial state\n * @param  {Object}   actions      actions map\n * @param  {Function} reducer      custom reducer function\n * @return {Function}              reducer function\n */\nexport default function reducerFn(initialState, actions={}, reducer) {\n  const { actionFetch, actionSuccess, actionFail,\n    actionReset, actionCache, actionAbort } = actions;\n  return (state=initialState, action)=> {\n    const request = action.request || {};\n    switch (action.type) {\n      case actionFetch:\n        return {\n          ...state,\n          request,\n          loading: true,\n          error: null,\n          syncing: !!action.syncing\n        };\n      case actionSuccess:\n        return {\n          ...state,\n          loading: false,\n          sync: true,\n          syncing: false,\n          error: null,\n          data: action.data\n        };\n      case actionFail:\n        return {\n          ...state,\n          loading: false,\n          error: action.error,\n          syncing: false\n        };\n      case actionReset:\n        const { mutation } = action;\n        return (mutation === \"sync\") ?\n        { ...state,\n          request: null,\n          sync: false } :\n        { ...initialState };\n      case actionAbort:\n        return {\n          ...state,\n          request: null,\n          loading: false,\n          syncing: false,\n          error: action.error\n        };\n      case actionCache:\n        const { id, data } = action;\n        const cacheExpire = state.cache[id] ? state.cache[id].expire : null;\n        const expire = setExpire(action.expire, cacheExpire);\n        return {\n          ...state,\n          cache: { ...state.cache, [id]: { expire, data } }\n        };\n      default:\n        return reducer ? reducer(state, action) : state;\n    }\n  };\n}\n"]}